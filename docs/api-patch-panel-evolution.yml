openapi: 3.0.0
info:
  title: API Patch Panel Evolution
  description: |
    API para monitoramento do Patch Panel Evolution

    ### Configurações:
    
    - **Status**: Retorna os dados configurados no dispositivo.
    - **Controle de Saida**: Envia comandos para o dispositivo para alterar os estados e configurações dos parâmetros.
    - **Interface de Rede**: Possibilidade de alterar os dados da interface de rede.
    - **Configurar Watchdog**: Permite a configuração personalizada dos parâmetros do watchdog.
    - **Configuração das Saídas**: Possibilidade de alterar os estados das saídas
    - **Rearme das Saídas**: Permite alterar o tempo de rearme das saídas
    - **SNMP**: Configuração dos parâmetros do SNMP.
   
    
    
    <h1>Instruções para Solicitações que Contenham "/.../"</h1>
    <p>Para requisições que incluam "/.../" na URL, siga o exemplo fornecido e copie apenas os valores que aparecem após "/../". Isso significa que o "/.../" não deve ser incluído na sua solicitação. Apenas os valores subsequentes são necessários para que a requisição seja bem-sucedida.</p> <p>Exemplo:</p> <ul> <li><strong>Requisição Original:</strong> <code>/../wdt.htm</code></li> <li><strong>Requisição Correta:</strong> <code>/wdt.htm</code></li> </ul>
  
  version: 1.0.0
servers:
  - url: http://{{host}}

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Autenticação básica necessária. 

tags:
  - name: Status
  - name: Controle de Saida
  - name: Interface de Rede
  - name: Configurar Watchdog
  - name: Configuração das Saídas
  - name: Rearme das Saídas
  - name: SNMP
  - name: Alterar senha
  
  
  

paths:
  /status.json:
    get:
      tags:
        - Status
      summary:  Buscar informações do status do equipamento
      description: |

          **Exemplos**:
        
          - URL: `/status.json`
          
      responses:
        '200':
          description: Status obtido com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Json com as informações do equipamento"
        '500':
          description: Erro ao buscar status
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erro interno do servidor."

      security:
        - basicAuth: []
  /outpoe.cgi:
    get:
      tags:
        - Controle de Saida
      summary: Controle das saidas 
      description: |
          Comanados de controle das saídas:
          
           **Exemplos**:
            - URL: `/outpoe.cgi?poe=1&sts=0&pr=0`"
            - Para a saída 1, está sendo desligada e sem reinicio. 
      parameters:
        - name: poe
          in: query
          required: true
          description: |
           Operação para escolher qual saída será alterada. 
           ** Exem
            
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
              - "8"
              - "9"
              - "10"
            example: "1"
            
        - name: sts
          in: query
          description: |
            Operação para ativar ou desativar as  saídas:
            
              **Tipo de saída**:
              - `0`: Desligado.
              - `1`: Ligado.
          required: true
          schema:
            type: string
            enum:
              - "0"
              - "1"
            example: "0"
            
        - name: pr
          in: query
          description: |
            O valor do parâmetro `pr` determina se será com reinico ou sem.
            - `0`: Sem reinicio. 
            - `1`: Com reinicio.
          required: true
          schema:
            type: string
            enum:
              - "0"
              - "1"
            example: "1"
      responses:
        '200':
          description: Sucesso
          content:
            text/html:
              schema:
                type: string
                example: "Success! Proteção habilitada"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Connection:
              schema:
                type: string
                example: "close"
            Content-Type:
              schema:
                type: string
                example: "text/html"
            Cache-Control:
              schema:
                type: string
                example: "no-cache"
      security:
        - basicAuth: []
  /config.htm:
    post:
      tags:
        - Interface de Rede
      summary:  Alterar configurações de rede
      description: |
         
         - Configura manualmente as informações de rede do equipamento.
        
          **Exemplos**:
        
          - URL: `/config.htm`
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                dhcp:
                  type: boolean
                  description: Define se o DHCP está ativado ou desativado
                  example: false
                mac:
                  type: string
                  description: Endereço MAC da interface de rede
                  example: "C0:C0:C0:00:00:00"
                host:
                  type: string
                  description: Nome do host [ Sem espaços e caracteres !@#$%&*(){}[]^~´`\/-_=+-]
                  example: "POPENG"
                h2pt:
                  type: string
                  description: Porta de rede
                  example: "80"
                ip:
                  type: string
                  description: Endereço IP da interface
                  example: "192.168.1.10"
                gw:
                  type: string
                  description: Gateway padrão
                  example: "192.168.1.1"
                sub:
                  type: string
                  description: Máscara de sub-rede
                  example: "255.255.255.0"
                dns1:
                  type: string
                  description: Servidor DNS 1
                  example: "192.168.1.1"
                dns2:
                  type: string
                  description: Servidor DNS 2
                  example: "4.4.4.4"
      responses:
        '200':
          description: Configurações de rede alteradas com sucesso
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Configurações alteradas com sucesso</body></html>"
        '400':
          description: Erro ao alterar configurações de rede
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Parâmetros inválidos"

      security:
        - basicAuth: []
  /wdt.htm:
    get:
      tags:
        - Configurar Watchdog
      summary: Configuração do Watchdog
      description: |
        Endpoint para configurar o Watchdog, ativar, e ajustar os intervalos:
            
        - **Ativar Watchdog**
        - **Intervalo entre Varreduras[Min]**
        - **Limite Ping [1- 10000] ms**
        - **Tempo Rearme das Portas [5-60] segundos**
        - **Número Máximo de Resets por Porta [0 = Desabilitado - 255]**
        
        **Exemplos**:
        - URL: `/wdt.htm?op=0&w1=false&w2=1&w3=20&w4=10&w5=0`
        
     
      parameters:
        - name: op
          in: query
          description: Operação (op=0)
          required: true
          schema:
            type: integer
            enum: [0]
            example: 0
        - name: w1
          in: query
          description: Ativar Watchdog
          required: true
          schema:
            type: boolean
            example: true
        - name: w2
          in: query
          description: Intervalo entre Varreduras[Min]
          required: true
          schema:
            type: integer
            example: 5
        - name: w3
          in: query
          description: Limite Ping [1- 10000] ms
          required: true
          schema:
            type: integer
            example: 10
        - name: w4
          in: query
          description: Tempo Rearme das Portas [5-60] segundos
          required: true
          schema:
            type: integer
            example: 0
            
        - name: w5
          in: query
          description: Número Máximo de Resets por Porta [0 = Desabilitado - 255]
          required: true
          schema:
            type: integer
            example: 0
        
      responses:
        '200':
          description: Sucesso
          content:
            text/html:
              schema:
                type: string
                example: |
                  <html>
                    <body>
                       Mostra os campos preenchidos do HTML
                    </body>
                  </html>
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Connection:
              schema:
                type: string
                example: "close"
            Content-Type:
              schema:
                type: string
                example: "text/html"
            Cache-Control:
              schema:
                type: string
                example: "no-cache"
      security:
        - basicAuth: []
        
  /./wdt.htm:
    get:
      tags:
        - Configurar Watchdog
      summary: Configuração Watchdog das Saídas
      description: |
        Endpoint para configurar os Watchdog:
        - **Saída**
        - **Habilitar**   
        - **IP [IPV4]**   
       
        
        **Exemplos**:
        
        - URL: `/wdt.htm?op=1&porta=1&wdten=true&wdtip=0.0.0.0`
        
      parameters:
        - name: op
          in: query
          description: Operação (op=1)
          required: true
          schema:
            type: integer
            enum: [1]
            example: 1
        - name: porta
          in: query
          description: Habilita ou desabilita a saída
          required: true
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
              - "8"
              - "9"
              - "10"
            example: "1"
        - name: wdten
          in: query
          description: Habilita ou desabilita a saída
          required: true
          schema:
            type: boolean
            example: true
        - name: wdtip
          in: query
          description: Status do trigger 1
          required: true
          schema:
            type: string
            example: "192.168.1.10"
        
      responses:
        '200':
          description: Sucesso
          content:
            text/html:
              schema:
                type: string
                example: |
                  <html>
                    <body>
                      Mostra os campos preenchidos do HTML
                    </body>
                  </html>
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Connection:
              schema:
                type: string
                example: "close"
            Content-Type:
              schema:
                type: string
                example: "text/html"
            Cache-Control:
              schema:
                type: string
                example: "no-cache"
      security:
        - basicAuth: []
        
  /wdtsts:
    get:
      tags:
        - Configurar Watchdog
      summary: Resetar o contador de reset 
      description: |
        
        Acionar manualmente o reset do contador.
        
         **Exemplos**:
        
        - URL: `/outpoe.cgi?poe=11`
      parameters:
        - name: poe
          in: query
          description: Define a operação .
          required: true
          schema:
            type: integer
            enum: [11]
            example: 11
        
      responses:
        '200':
          description: Sucesso
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Mostra os campos preenchidos do HTML</body></html>"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Connection:
              schema:
                type: string
                example: "close"
            Content-Type:
              schema:
                type: string
                example: "text/html"
            Cache-Control:
              schema:
                type: string
                example: "no-cache"
      security:
        - basicAuth: []
        
  /output.htm:
    get:
      tags:
        - Configuração das Saídas
      summary: Gravas as informações das saídas
      description: |
         
         - Gravar as informações de saída, com base na `saída`, `habilitar` e `identificação`. 
        
         **Exemplos**:
        
          - URL: `/output.htm?porta=1&rmac=true&nt=POE+1`
          
      parameters:
        - name: porta
          in: query
          description: Define a saída.
          required: true
          schema:
            type: string
            enum:
              - "1"
              - "2"
              - "3"
              - "4"
              - "5"
              - "6"
              - "7"
              - "8"
              - "9"
              - "10"
            example: "1"
        - name: rmac
          in: query
          description: Habilita ou desabilita a saída
          required: true
          schema:
            type: boolean
            example: true
            
        - name: nt
          in: query
          description: Identificação da saída. Não Utilizar caracteres como ["ç!@#$%&*(){}[]^~´`\/-_=+-,"]
          required: true
          schema:
            type: string
            example: "POE+1"
      responses:
        '200':
          description: Sucesso
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Mostra os campos preenchidos do HTML</body></html>"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Connection:
              schema:
                type: string
                example: "close"
            Content-Type:
              schema:
                type: string
                example: "text/html"
            Cache-Control:
              schema:
                type: string
                example: "no-cache"
      security:
        - basicAuth: []
        
  /./output.htm:
    get:
      tags:
        - Configuração das Saídas
      summary: Configuração das Saídas - Habilitar/Desabilitar todas
      description: |
         - Configura manualmente o acionamento do alarme com a temperatura, utilizando o parâmetro `trigger`, `Maior valor de temperatura`, `Menor valor de temperatura`.

         **Exemplos**:
        
          - URL para habilitar: `/outpoe.cgi?poe=12`
          - URL para desabilitar: `/outpoe.cgi?poe=13`
          
      parameters:
        - name: poe
          in: query
          description: |
              Define a operação de habilitar/desabilitar todas.
              - `12` - Habilitar todas
              - `13` - Desabilitar todas
          required: true
          schema:
            type: string
            enum: 
              - "12"
              - "13"
            example: "12"
        
      responses:
        '200':
          description: Sucesso
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Mostra os campos preenchidos do HTML</body></html>"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Connection:
              schema:
                type: string
                example: "close"
            Content-Type:
              schema:
                type: string
                example: "text/html"
            Cache-Control:
              schema:
                type: string
                example: "no-cache"
      security:
        - basicAuth: []
        
  /rearme.htm:
    get:
      tags:
        - Rearme das Saídas
      summary: Configuração Rearme das Saídas
      description: |
         - Configura manualmente o tempo de rearme das saídas.
         
         **Exemplos**:
        
          - URL: `/rearme.htm?tmp=10`
          
      parameters:
        - name: tmp
          in: query
          description: Tempo rearme [5-120s]
          required: true
          schema:
            type: string
            example: "10"
        
      responses:
        '200':
          description: Sucesso
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Mostra os campos preenchidos do HTML</body></html>"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Connection:
              schema:
                type: string
                example: "close"
            Content-Type:
              schema:
                type: string
                example: "text/html"
            Cache-Control:
              schema:
                type: string
                example: "no-cache"
      security:
        - basicAuth: []
  /snmp.htm:
    get:
      tags:
        - SNMP
      summary:  Configuração SNMP e Configuração das Communities
      description: |
         
         - Configura manualmente a configuração do SNMP.
        
          **Exemplos**:
        
          - URL: `/snmp.htm?snmp1=false&rcm0=public&rcm1=read&rcm2=private&wcm0=private&wcm1=write&wcm2=public`
      parameters:
        - name: snmp1
          in: query
          description: Define se está ativado ou não o SNMP `1` para ativar e `0` para desligar.
          required: true
          schema:
            type: integer
            enum: [0,1]
            example: 0
        - name: rcm0
          in: query
          description: Read Community 1 - Somente são permitidos Números e Letras.
          required: true
          schema:
            type: string
            example: public
            
        - name: rcm1
          in: query
          description: Read Community 2 - Somente são permitidos Números e Letras.
          required: true
          schema:
            type: string
            example: read
            
        - name: rcm2
          in: query
          description: Read Community 3 - Somente são permitidos Números e Letras.
          required: true
          schema:
            type: string
            example: private
            
        - name: wcm0
          in: query
          description: Write Community 1 - Somente são permitidos Números e Letras.
          required: true
          schema:
            type: string
            example: private
            
        - name: wcm1
          in: query
          description: Write Community 2 - Somente são permitidos Números e Letras.
          required: true
          schema:
            type: string
            example: write
            
        - name: wcm2
          in: query
          description: Write Community 3 - Somente são permitidos Números e Letras.
          required: true
          schema:
            type: string
            example: public
      responses:
        '200':
          description: Sucesso
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Mostra os campos preenchidos do HTML</body></html>"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Connection:
              schema:
                type: string
                example: "close"
            Content-Type:
              schema:
                type: string
                example: "text/html"
            Cache-Control:
              schema:
                type: string
                example: "no-cache"
      security:
        - basicAuth: []
        
  /senha.htm:
    get:
      tags:
        - Alterar senha
      summary:  Alterar a senha do equipamento
      description: |
         
         - Configura manualmente a configuração do SNMP.
        
          **Exemplos**:
        
          - URL: `/senha.htm?senha=senha&csenha=senha`
      parameters:
        - name: senha
          in: query
          description: Nova senha
          required: true
          schema:
            type: string
            example: read
            
        - name: csenha
          in: query
          description: Confirme a nova senha
          required: true
          schema:
            type: string
            example: private
            
      responses:
        '200':
          description: Sucesso
          content:
            text/html:
              schema:
                type: string
                example: "<html><body>Mostra os campos preenchidos do HTML</body></html>"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Connection:
              schema:
                type: string
                example: "close"
            Content-Type:
              schema:
                type: string
                example: "text/html"
            Cache-Control:
              schema:
                type: string
                example: "no-cache"
      security:
        - basicAuth: []